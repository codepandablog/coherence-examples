<?xml version="1.0"?>

<!-- This XML document is a default Coherence Cache Configuration deployment 
	descriptor that should be customized (or replaced) for your particular caching 
	and deployment requirements. This configuration is usable in servers, proxies, 
	clustered clients, and non-clustered extend clients. When used from within 
	a server such a DefaultCacheServer, the server will automatically host a 
	storage enabled cache service as well as a proxy service to allow extend 
	clients to access the caches. Clients using the configuration are storage 
	disabled by default. This configuration defines a number of inter-related 
	cache schemes: - server - this scheme defines the storage tier for all caches 
	- thin-direct - this scheme is for use by cluster members to access the caches 
	hosted by the "server" scheme - near-direct - this scheme adds near caching 
	to "thin-direct" - thin-remote - conceptually similar to "thin-direct" but 
	for use by extend clients - near-remote - conceptually similar to "near-direct" 
	but for use by extend clients The default scheme for caches is "near-direct". 
	This default can be overridden via two system properties. The "coherence.profile" 
	system property controls the first portion of the scheme name and defines 
	the approach used for in-process caching, i.e. "near" (on-demand) or "thin" 
	(none). The "coherence.client" system property controls how a client connects 
	to the cluster, i.e. "direct" (cluster member) or "remote" (extend client). 
	Note: System properties defined within this cache configuration are specific 
	to this configuration and are not meaningful to other cache configurations 
	unless similarly defined there. -->
<cache-config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.oracle.com/coherence/coherence-cache-config"
	xsi:schemaLocation="http://xmlns.oracle.com/coherence/coherence-cache-config http://xmlns.oracle.com/coherence/coherence-cache-config/1.3/coherence-cache-config.xsd">
	<defaults>
		<serializer>pof</serializer>
	</defaults>

	<caching-scheme-mapping>
		<cache-mapping>
			<cache-name>customers</cache-name>
			<scheme-name>ExamplesPartitionedPofScheme</scheme-name>
		</cache-mapping>
	</caching-scheme-mapping>


	<caching-schemes>
		<distributed-scheme>
			<scheme-name>ExamplesPartitionedPofScheme</scheme-name>
			<service-name>PartitionedPofCache</service-name>
			<backing-map-scheme>
				<local-scheme>
					<!-- each node will be limited to 32MB -->
					<high-units>32M</high-units>
					<unit-calculator>binary</unit-calculator>
				</local-scheme>
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme><!-- Invocation Service scheme. -->
		<invocation-scheme>
			<scheme-name>examples-invocation</scheme-name>
			<service-name>InvocationService</service-name>

			<autostart system-property="tangosol.coherence.invocation.autostart">true</autostart>
		</invocation-scheme>

	</caching-schemes>
</cache-config>
